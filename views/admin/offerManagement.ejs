<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Zay Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <link
      rel="shortcut icon"
      type="image/x-icon"
      href="assets/imgs/theme/favicon.svg"
    />
    <!-- Template CSS -->
    <link href="/assets/css/main.css?v=1.1" rel="stylesheet" type="text/css" />
  </head>

  <body>
    <% include('../partials/sidenav.ejs') %>
    <main class="main-wrap">
      <!-- Include Create Offer Modal -->
      <% include('./partials/createOffer.ejs') %>
  
      <!-- Include Edit Offer Modal -->
      <% include('./partials/editOffer.ejs') %>
  
      <section class="content-main">
        <div class="content-header d-flex justify-content-between align-items-center">
          <h2 class="content-title">Manage Coupons</h2>
          <div>
            <button class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#exampleModal">
              <i class="material-icons md-plus"></i> Create Coupon
            </button>
          </div>
        </div>
  
        <!-- Coupon Table -->
        <div class="card mb-4">
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Coupon Name</th>
                    <th>Coupon Code</th>
                    <th>Activation Date</th>
                    <th>Expire Date</th>
                    <th>Discount Amount</th>
                    <th class="text-end">Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (Array.isArray(coupons) && coupons.length > 0) { %>
                    <% coupons.forEach(coupon => { %>
                      <tr>
                        <td><%= coupon.name %></td>
                        <td><%= coupon.couponCode %></td>
                        <td><%= coupon.activationDate %></td>
                        <td><%= coupon.expiresDate %></td>
                        <td><%= coupon.discountAmount %></td>
                        <td class="text-end">
                          <button class="btn btn-sm btn-dark rounded font-sm mt-15" onclick="deleteCoupon('<%= coupon._id %>')">Delete</button>
                          <button class="btn btn-sm btn-dark rounded font-sm mt-15" onclick="editCoupon('<%= coupon._id %>', '<%= coupon.name %>', '<%= coupon.activationDate %>', '<%= coupon.expiresDate %>', '<%= coupon.discountAmount %>', '<%= coupon.limit %>')" data-bs-toggle="modal" data-bs-target="#exampleModal2">Edit</button>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="6">No coupons found</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
  
        <!-- Pagination -->
        <div class="pagination-area mt-15 mb-50">
          <nav aria-label="Page navigation example">
            <ul class="pagination">
              <% if (page > 0) { %>
                <li class="page-item">
                  <a class="page-link" href="?page=<%= page - 1 %>"><i class="material-icons md-chevron_left"></i></a>
                </li>
              <% } %>
              <% for (let i = 0; i < totalPages; i++) { %>
                <% if (i === 0 || i === totalPages - 1 || (i >= page - 2 && i <= page + 2)) { %>
                  <li class="page-item <%= page === i ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>"><%= i + 1 %></a>
                  </li>
                <% } else if (i === page - 3 || i === page + 3) { %>
                  <li class="page-item disabled"><span class="page-link">...</span></li>
                <% } %>
              <% } %>
              <% if (page < totalPages - 1) { %>
                <li class="page-item">
                  <a class="page-link" href="?page=<%= page + 1 %>"><i class="material-icons md-chevron_right"></i></a>
                </li>
              <% } %>
            </ul>
          </nav>
        </div>
      </section>
      <!-- /.content-main -->
  
      <% include('../partials/adminFooter.ejs') %>
    </main>
  
    <!-- Scripts -->
    <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/vendors/select2.min.js"></script>
    <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/node_modules/sweetalert2/dist/sweetalert2.all.min.js"></script>
    <script src="/assets/js/main.js?v=1.1" type="text/javascript"></script>
  
    <!-- Custom Script for Modals -->
    <script>
      function editCoupon(id, name, adate, edate, damount, limit) {
        document.getElementById('edit_name').value = name;
        document.getElementById('edit_couponId').value = id;
        document.getElementById('edit_adate').value = adate;
        document.getElementById('edit_edate').value = edate;
        document.getElementById('edit_damount').value = damount;
        document.getElementById('edit_limit').value = limit;
      }
  
      function deleteCoupon(id) {
        // Implement delete functionality here, maybe using AJAX
        console.log('Deleting coupon with id:', id);
      }
    </script>
  </body>
  
</html>

<script>
  function deleteCoupon(id) {
    const data = { id: id };

    Swal.fire({
      title: "Are you sure?",
      text: "Do you want to delete this coupon?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, delete it!",
    }).then((decision) => {
      if (decision.isConfirmed) {
        $.ajax({
          method: "DELETE",
          url: "/admin/deleteCoupon",
          data: JSON.stringify(data),
          contentType: "application/json",
          success: (response) => {
            if (response.success) {
              // Reload the current page to update the coupon list and pagination
              window.location.reload();
            } else {
              Swal.fire({
                title: "Failed to delete coupon",
                icon: "error",
              });
            }
          },
          error: (xhr, status, error) => {
            Swal.fire({
              title: "An error occurred",
              text: error,
              icon: "error",
            });
          },
        });
      }
    });
  }
</script>

<script>
  function editCoupon(id, name, adate, edate, damount, limit) {
    console.log("function is called");
    document.getElementById("couponId").value = id;
    document.getElementById("name").value = name;
    document.getElementById("adate").value = adate;
    document.getElementById("edate").value = edate;
    document.getElementById("damount").value = damount;
    document.getElementById("limit").value = limit;
    return;
  }
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Attach validation to the first form
    attachFormValidation("#exampleModal form");

    // Attach validation to the second form
    attachFormValidation("#exampleModal2 form");

    function attachFormValidation(formSelector) {
      const form = document.querySelector(formSelector);

      form.addEventListener("submit", function (event) {
        // Prevent the form from submitting by default
        event.preventDefault();

        // Remove previous error messages
        clearErrorMessages(form);

        // Perform validation
        const name = form.elements.name.value.trim();
        const adate = form.elements.adate.value.trim();
        const edate = form.elements.edate.value.trim();
        const limit = form.elements.limit.value.trim();
        const damount = form.elements.damount.value.trim();

        if (name === "") {
          displayErrorMessage(form, "name", "Please enter a coupon name.");
          return;
        }

        if (adate === "") {
          displayErrorMessage(
            form,
            "adate",
            "Please enter an activation date."
          );
          return;
        }

        if (edate === "") {
          displayErrorMessage(
            form,
            "edate",
            "Please enter an expiration date."
          );
          return;
        }

        if (limit === "") {
          displayErrorMessage(form, "limit", "Please enter a limit of use.");
          return;
        }

        if (damount === "") {
          displayErrorMessage(
            form,
            "damount",
            "Please enter a discount amount."
          );
          return;
        }

        // Validate date format (dd-mm-yyyy)
        const dateRegex = /^\d{2}-\d{2}-\d{4}$/;
        if (!dateRegex.test(adate) || !dateRegex.test(edate)) {
          alert("Invalid date format. Please use dd-mm-yyyy.");
          return;
        }

        // Validate discount amount is a number
        if (isNaN(parseFloat(damount))) {
          displayErrorMessage(
            form,
            "damount",
            "Discount amount must be a valid number."
          );
          return;
        }

        // If all validations pass, you can submit the form
        form.submit();
      });
    }

    function displayErrorMessage(form, fieldName, message) {
      const field = form.elements[fieldName];
      const errorDiv = document.createElement("div");
      errorDiv.className = "error-message";
      errorDiv.style.color = "red"; // Set color to red
      errorDiv.textContent = message;
      field.parentNode.insertBefore(errorDiv, field);

      // Remove error message after 3000 milliseconds (3 seconds)
      setTimeout(() => {
        errorDiv.remove();
      }, 3000);
    }

    function clearErrorMessages(form) {
      const errorMessages = form.querySelectorAll(".error-message");
      errorMessages.forEach((errorMessage) => {
        errorMessage.remove();
      });
    }
  });
</script>
