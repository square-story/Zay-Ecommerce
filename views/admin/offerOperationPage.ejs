<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Offer Management</title>
  <meta http-equiv="x-ua-compatible" content="ie=edge" />
  <meta name="description" content="" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="shortcut icon" type="image/x-icon" href="assets/imgs/theme/favicon.svg" />
  <link href="/assets/css/main.css?v=1.1" rel="stylesheet" type="text/css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.28/dist/sweetalert2.min.css">
  <style>
    .btn-group {
      display: flex;
      justify-content: flex-end;
      gap: 0.5rem;
    }
    .btn-group .btn {
      min-width: 80px; /* Ensure buttons have a minimum width for uniformity */
    }
    .validation-error {
      color: red;
      margin-top: -10px;
      margin-bottom: 10px;
    }
  </style>

<script>
  function formatDate(dateString) {
    const options = { day: '2-digit', month: '2-digit', year: 'numeric' };
    return new Date(dateString).toLocaleDateString('en-GB', options);
  }
</script>
</head>
<body>
  <%- include('../partials/sidenav.ejs') -%>
  <main class="main-wrap">
    <% if (successMessages.length > 0) { %>
      <div class="alert alert-success">
        <% successMessages.forEach(msg => { %>
          <p><%= msg %></p>
        <% }) %>
      </div>
    <% } %>

    <% if (errorMessages.length > 0) { %>
      <div class="alert alert-danger">
        <% errorMessages.forEach(msg => { %>
          <p><%= msg %></p>
        <% }) %>
      </div>
    <% } %>
    <!-- Create Offer Modal -->
    <div class="modal fade" id="createOfferModal" tabindex="-1" aria-labelledby="createOfferModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="createOfferModalLabel">Create Offer</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form action="/admin/create-offer" method="post" id="createOfferForm">
              <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Enter offer name" class="form-control" />
                <div class="validation-error" id="nameError"></div>
              </div>

              <div class="mb-3">
                <label for="adate" class="form-label">Activation Date</label>
                <input type="date" name="adate" class="form-control" />
                <div class="validation-error" id="adateError"></div>
              </div>

              <div class="mb-3">
                <label for="edate" class="form-label">Expire Date</label>
                <input type="date" name="edate" class="form-control" />
                <div class="validation-error" id="edateError"></div>
              </div>

              <div class="mb-3">
                <label for="damount" class="form-label">Discount Amount (%)</label>
                <input type="number" name="damount" placeholder="Enter discount percentage" class="form-control" />
                <div class="validation-error" id="damountError"></div>
              </div>

              <label for="type" class="form-label">Offer Type</label>
              <select name="type" class="form-select" onchange="toggleOfferTypeFields(this.value)">
                <option value="product">Product</option>
                <option value="category">Category</option>
              </select>

              <div id="productOfferFields" class="mt-3" style="display: none;">
                <label class="form-label">Select Products</label>
                <div>
                  <% products.forEach(product => { %>
                    <div class="form-check">
                      <input class="form-check-input" type="checkbox" name="productIds" value="<%= product._id %>" id="product_<%= product._id %>">
                      <label class="form-check-label" for="product_<%= product._id %>">
                        <%= product.name %>
                      </label>
                    </div>
                  <% }) %>
                </div>
              </div>

              <div id="categoryOfferFields" class="mt-3" style="display: none;">
                <label class="form-label">Select Categories</label>
                <div>
                  <% categories.forEach(category => { %>
                    <div class="form-check">
                      <input class="form-check-input" type="checkbox" name="categoryIds" value="<%= category._id %>" id="category_<%= category._id %>">
                      <label class="form-check-label" for="category_<%= category._id %>">
                        <%= category.name %>
                      </label>
                    </div>
                  <% }) %>
                </div>
              </div>

              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Create Offer</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>


    <!-- Edit Offer Modal -->
    <div class="modal fade" id="editOfferModal" tabindex="-1" aria-labelledby="editOfferModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="editOfferModalLabel">Edit Offer</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form action="/admin/edit-offer?_method=PUT" method="post" id="editOfferForm">
              <input type="hidden" id="editOfferId" name="id" />
              <div class="mb-3">
                <label for="editName" class="form-label">Name</label>
                <input type="text" id="editName" name="name" placeholder="Enter offer name" class="form-control" />
                <div class="validation-error" id="editNameError"></div>
              </div>

              <div class="mb-3">
                <label for="editAdate" class="form-label">Activation Date</label>
                <input type="date" id="editAdate" name="adate" class="form-control" />
                <div class="validation-error" id="editAdateError"></div>
              </div>

              <div class="mb-3">
                <label for="editEdate" class="form-label">Expire Date</label>
                <input type="date" id="editEdate" name="edate" class="form-control" />
                <div class="validation-error" id="editEdateError"></div>
              </div>

              <div class="mb-3">
                <label for="editDamount" class="form-label">Discount Amount (%)</label>
                <input type="number" id="editDamount" name="damount" placeholder="Enter discount percentage" class="form-control" />
                <div class="validation-error" id="editDamountError"></div>
              </div>

              <label for="editType" class="form-label">Offer Type</label>
              <select id="editType" name="type" class="form-select" onchange="toggleEditOfferTypeFields(this.value)">
                <option value="product">Product</option>
                <option value="category">Category</option>
              </select>

              <div id="editProductOfferFields" class="mt-3" style="display: none;">
                <label class="form-label">Select Products</label>
                <div>
                  <% products.forEach(product => { %>
                    <div class="form-check">
                      <input class="form-check-input" type="checkbox" name="productIds" value="<%= product._id %>" id="edit_product_<%= product._id %>">
                      <label class="form-check-label" for="edit_product_<%= product._id %>">
                        <%= product.name %>
                      </label>
                    </div>
                  <% }) %>
                </div>
              </div>

              <div id="editCategoryOfferFields" class="mt-3" style="display: none;">
                <label class="form-label">Select Categories</label>
                <div>
                  <% categories.forEach(category => { %>
                    <div class="form-check">
                      <input class="form-check-input" type="checkbox" name="categoryIds" value="<%= category._id %>" id="edit_category_<%= category._id %>">
                      <label class="form-check-label" for="edit_category_<%= category._id %>">
                        <%= category.name %>
                      </label>
                    </div>
                  <% }) %>
                </div>
              </div>

              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save changes</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <section class="content-main">
      <div class="content-header">
        <h2 class="content-title">Manage Offers</h2>
        <div>
          <button class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#createOfferModal">
            <i class="material-icons md-plus"></i> Create Offer
          </button>
        </div>
      </div>
      <div class="card mb-4">
        <div class="card-body">
          <div class="table-responsive" id="Reload">
            <table class="table">
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Activation Date</th>
                  <th>Expiration Date</th>
                  <th>Discount</th>
                  <th>Type</th>
                  <th class="text-end">Actions</th>
                </tr>
              </thead>
              <tbody>
                <% offers.forEach(offer => { %>
                  <tr>
                    <td><%= offer.name %></td>
                    <td><script>document.write(formatDate('<%= offer.adate %>'));</script></td>
                    <td><script>document.write(formatDate('<%= offer.edate %>'));</script></td>
                    <td><%= offer.damount %>%</td>
                    <td><%= offer.type %></td>
                    <td class="text-end">
                      <div class="btn-group">
                        <button class="btn btn-primary" onclick="editOffer('<%= offer._id %>', '<%= offer.name %>', '<%= offer.adate %>', '<%= offer.edate %>', '<%= offer.damount %>')" data-bs-toggle="modal" data-bs-target="#editOfferModal">Edit</button>
                        <button class="btn btn-danger" onclick="deleteOffer('<%= offer._id %>')">Delete</button>
                      </div>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </section>
    <%- include('../partials/adminFooter.ejs') -%>
  </main>

  <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
  <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
  <script src="/assets/js/vendors/select2.min.js"></script>
  <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
  <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.28/dist/sweetalert2.all.min.js"></script>
  <script src="/assets/js/main.js?v=1.1" type="text/javascript"></script>

  <script>
    document.getElementById('createOfferForm').addEventListener('submit', function(event) {
      if (!validateForm('createOfferForm')) {
        event.preventDefault();
      }
    });
  
    document.getElementById('editOfferForm').addEventListener('submit', function(event) {
      if (!validateForm('editOfferForm')) {
        event.preventDefault();
      }
    });
  
    function validateForm(formId) {
      var isValid = true;
      var form = document.getElementById(formId);
  
      var name = form.querySelector('input[name="name"]');
      var adate = form.querySelector('input[name="adate"]');
      var edate = form.querySelector('input[name="edate"]');
      var damount = form.querySelector('input[name="damount"]');
  
      // Validate name
      var nameErrorElement = document.getElementById(formId === 'createOfferForm' ? 'nameError' : 'editNameError');
      const nameRegex = /^[A-Za-z0-9\s]+$/;
      if (name.value.trim() === '' || !nameRegex.test(name.value.trim()) || name.value.trim().length < 3 || name.value.trim().length > 50) {
        nameErrorElement.innerText = 'Please enter a valid name (3-50 characters, no special characters).';
        isValid = false;
      } else {
        // Asynchronous name existence check for creation form
        if (formId === 'createOfferForm') {
          $.ajax({
            method: "POST",
            url: "/admin/check-offer-name",
            data: JSON.stringify({ name: name.value.trim() }),
            contentType: "application/json",
            async: false, // Synchronous call for form validation
            success: function(response) {
              if (!response.isUnique) {
                nameErrorElement.innerText = 'Offer name already exists.';
                isValid = false;
              } else {
                nameErrorElement.innerText = '';
              }
            },
            error: function() {
              nameErrorElement.innerText = 'Error checking name uniqueness.';
              isValid = false;
            }
          });
        } else {
          nameErrorElement.innerText = '';
        }
      }
  
  // Validate activation date
  var adateErrorElement = document.getElementById(formId === 'createOfferForm' ? 'adateError' : 'editAdateError');
  const activationDate = new Date(adate.value);
  const today = new Date();
  today.setHours(0, 0, 0, 0); // Normalize today's date to midnight
  if (adate.value === '' || activationDate < today) {
    adateErrorElement.innerText = 'Activation date must be today or in the future.';
    isValid = false;
  } else {
    adateErrorElement.innerText = '';
  }

  // Validate expiration date
  var edateErrorElement = document.getElementById(formId === 'createOfferForm' ? 'edateError' : 'editEdateError');
  const expirationDate = new Date(edate.value);
  if (edate.value === '' || expirationDate <= activationDate) {
    edateErrorElement.innerText = 'Expire date must be after activation date.';
    isValid = false;
  } else {
    edateErrorElement.innerText = '';
  }
      // Validate discount amount
      var damountErrorElement = document.getElementById(formId === 'createOfferForm' ? 'damountError' : 'editDamountError');
      var discountAmount = parseFloat(damount.value);
      if (isNaN(discountAmount) || discountAmount <= 0 || discountAmount > 100) {
        damountErrorElement.innerText = 'Please enter a valid discount percentage (0-100).';
        isValid = false;
      } else {
        damountErrorElement.innerText = '';
      }
  
      return isValid;
    }
  
    function toggleOfferTypeFields(value) {
      document.getElementById('productOfferFields').style.display = value === 'product' ? 'block' : 'none';
      document.getElementById('categoryOfferFields').style.display = value === 'category' ? 'block' : 'none';
    }
  
    function toggleEditOfferTypeFields(value) {
      document.getElementById('editProductOfferFields').style.display = value === 'product' ? 'block' : 'none';
      document.getElementById('editCategoryOfferFields').style.display = value === 'category' ? 'block' : 'none';
    }
  
    function editOffer(id, name, adate, edate, damount, type, productIds, categoryIds) {
      document.getElementById('editOfferId').value = id;
      document.getElementById('editName').value = name;
      document.getElementById('editAdate').value = adate;
      document.getElementById('editEdate').value = edate;
      document.getElementById('editDamount').value = damount;
      document.getElementById('editType').value = type;
  
      toggleEditOfferTypeFields(type);
  
      if (type === 'product') {
        document.querySelectorAll('#editProductOfferFields input[type="checkbox"]').forEach(checkbox => {
          checkbox.checked = productIds.includes(checkbox.value);
        });
      } else if (type === 'category') {
        document.querySelectorAll('#editCategoryOfferFields input[type="checkbox"]').forEach(checkbox => {
          checkbox.checked = categoryIds.includes(checkbox.value);
        });
      }
    }
  
    function deleteOffer(id) {
      const data = { id: id };
  
      Swal.fire({
        title: "Are you sure?",
        text: "Do you want to delete this offer?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!",
      }).then((decision) => {
        if (decision.isConfirmed) {
          $.ajax({
            method: "DELETE",
            url: "/admin/delete-offer",
            data: JSON.stringify(data),
            contentType: "application/json",
            success: (response) => {
              if (response.success) {
                window.location.reload();
              } else {
                Swal.fire({
                  title: "Failed to delete offer",
                  icon: "error",
                });
              }
            },
            error: (xhr, status, error) => {
              Swal.fire({
                title: "An error occurred",
                text: error,
                icon: "error",
              });
            },
          });
        }
      });
    }
  </script>
  
</body>
</html>
